// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String
  role             Role      @default(CLIENT) // 
  name             String?   // Nombre completo
  phone            String?   // Teléfono de contacto
  createdAt        DateTime  @default(now())
  
  // Password reset
  resetToken       String?
  resetTokenExpiry DateTime?
  
  // Relaciones
  bookings         Booking[]
  
  // Para rol BUSINESS
  businessName     String?   // Nombre del negocio
  businessAddress  String?   // Dirección
  businessPhone    String?   // Teléfono del negocio
  businessId       String?   @unique  // ID único del negocio
}

enum Role {
  CLIENT   // Usuario común - solo reserva turnos
  BUSINESS // Dueño del negocio - gestión operativa
  ADMIN    // Super admin - control total
}

model Booking {
  id              String   @id @default(uuid())
  userId          String
  serviceId       String
  date            String
  time            String
  name            String
  phone           String?
  notes           String?
  status          BookingStatus @default(CONFIRMED) //
  reminderSent24h Boolean  @default(false)
  reminderSent2h  Boolean  @default(false)
  createdAt       DateTime @default(now())
  
  user            User     @relation(fields: [userId], references: [id])
  service         Service  @relation(fields: [serviceId], references: [id])
}

enum BookingStatus {
  CONFIRMED  // Confirmado
  CANCELLED  // Cancelado por usuario
  NO_SHOW    // No se presentó
  COMPLETED  // Completado
}

model Service {
  id          String    @id @default(uuid())
  name        String
  duration    Int       // en minutos
  price       Float
  description String?
  category    String?   // Ej: "Corte", "Coloración", "Tratamiento"
  active      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  bookings    Booking[]
}

model Config {
  id              String   @id @default(uuid())
  workingDays     String[] // ["Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
  startTime       String   // "09:00"
  endTime         String   // "18:00"
  slotDuration    Int      // 30 minutos
  lunchBreakStart String?  // "13:00"
  lunchBreakEnd   String?  // "14:00"
  blockedDates    String[] // ["2025-12-25", "2025-01-01"]
  updatedAt       DateTime @default(now())
}